This is parthi testing in github
sjgkgkgh

dhfj
dfj
fd
jfdj
df
jdf
jdf
j
dfjtrtrtrtrtrtrtrtrtr
fd
jd
jsdgds
df
j
dfj
d
j
kjktrrrrrruur
trruuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu
truuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuew4rjg

xvncx
ng
fjhtruj
trujtr
ujter
ujterjer




sub _get_file_list
{
	_exit_sub("Invalid arguments") if($#_ < 2 or $#_ > 4);
	
	my $mypath = shift;
	_exit_sub("Invalid input directory path") if(! -d "$mypath");
	
	my $file_dir_flag = shift;
	my $sub_search_flag = shift;
	
	my $filter_txt = "";
	$filter_txt = shift if(defined($_[0]) and $_[0] !~ m{^\s*$});
	
	my $not_filter = "";
	$not_filter = shift if(defined($_[0]) and $_[0] !~ m{^\s*$});


	my @out_list = ();
	if( $sub_search_flag ne "1") {
		opendir(DIR, $mypath);
		
		if($not_filter eq "") { 
			if($file_dir_flag eq "1") {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i and -f "$mypath/$_" } readdir(DIR);
			}
			elsif($file_dir_flag eq "2") {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i and -d "$mypath/$_" } readdir(DIR);
			}
			else {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i} readdir(DIR);
			}
		}
		else {

			if($file_dir_flag eq "1") {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i and -f "$mypath/$_" and !/$not_filter/i } readdir(DIR);
			}
			elsif($file_dir_flag eq "2") {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i and -d "$mypath/$_" and !/$not_filter/i } readdir(DIR);
			}
			else {
				@out_list = grep {!/^\.*$/ and /$filter_txt/i  and !/$not_filter/i } readdir(DIR);
			}
		}
				
		close(DIR);
	}
	else
	{
		@out_list = grep {s{^.*?$}{$mypath$&}i} _find_files($mypath, $filter_txt, $file_dir_flag, $not_filter);
	}
	
	return @out_list;
}



sdgds
sdgdsg
ds

sd

sdgdsg


sd
sdgds
sdgdsgsd
g
sdgdsgds
sdg
dsg
ds
gds
gds
gds
gds
gsd
gds
gdsg
dsg
dsg
dsg
dsg
dsg
ds
gds
gds
sdg
sdg
ds
ds


dsgdsgdsgs
